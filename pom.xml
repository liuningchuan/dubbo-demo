<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.liuning</groupId>
    <artifactId>spring-prometheus</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>

    <modules>
        <module>spring-prometheus-interfaces</module>
        <module>spring-prometheus-interfaces-impl</module>
        <module>spring-prometheus-web</module>
        <module>spring-prometheus-dao</module>
        <module>spring-prometheus-service</module>
        <module>spring-prometheus-dto</module>
        <module>spring-prometheus-common</module>
        <module>spring-prometheus-invoke</module>
    </modules>

    <scm>
        <url>https://github.com/lnylnn/spring-prometheus</url>
        <connection>scm:git:https://github.com/lnlynn/spring-prometheus.git</connection>
        <developerConnection>scm:git:https://github.com/lnlynn/spring-prometheus.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <revision>1.0.0-SNAPSHOT</revision>
        <java.version>1.8</java.version>
        <project.source.encoding>UTF-8</project.source.encoding>
        <spring-boot.version>2.1.8.RELEASE</spring-boot.version>
        <mybatis-spring-boot-starter.version>2.1.0</mybatis-spring-boot-starter.version>
        <mybatis-generator-core.version>1.3.6</mybatis-generator-core.version>
        <druid.version>1.1.10</druid.version>
        <hibernate-validator.version>6.1.5.Final</hibernate-validator.version>
        <mysql-connector-java.version>5.1.46</mysql-connector-java.version>
        <dubbo.version>2.7.2</dubbo.version>
        <curator-recipes.version>2.12.0</curator-recipes.version>
        <springfox-swagger.version>2.6.1</springfox-swagger.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <httpclient.version>4.5.11</httpclient.version>
        <itextpdf.version>5.5.13</itextpdf.version>
        <itext-asian.version>5.2.0</itext-asian.version>
        <xmlworker.version>5.5.9</xmlworker.version>
        <flying-saucer-pdf-itext5.version>9.1.20</flying-saucer-pdf-itext5.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <mybatis-generator-maven-plugin.version>1.4.0</mybatis-generator-maven-plugin.version>
    </properties>

    <!--统一管理项目的版本号，确保应用的各个项目的依赖和版本一致
    dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖-->
    <dependencyManagement>
        <dependencies>
            <!--本工程模块依赖-->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-interfaces</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-interfaces-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-dto</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>spring-prometheus-invoke</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--spring-boot-dependencies-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <!--druid-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--mysql-connector-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!--mybatis-generator-->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator-core.version}</version>
            </dependency>
            <!--hibernate-validator-->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <!--dubbo-->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!--curator-recipes-->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator-recipes.version}</version>
            </dependency>
            <!--swaggr2-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <!--swagger-ui-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <!--日志logback,包括logback-core和slf4j-api-->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>
            <!--commons-lang3-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!--httpclient-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--itextpdf-->
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>${itextpdf.version}</version>
            </dependency>
            <!--中文支持，引入itext-asian.jar-->
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itext-asian</artifactId>
                <version>${itext-asian.version}</version>
            </dependency>
            <dependency>
                <groupId>com.itextpdf.tool</groupId>
                <artifactId>xmlworker</artifactId>
                <version>${xmlworker.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xhtmlrenderer</groupId>
                <artifactId>flying-saucer-pdf-itext5</artifactId>
                <version>${flying-saucer-pdf-itext5.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
                <!-- maven默认安装该插件，这里修改部分默认配置 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.source.encoding}</encoding>
                    </configuration>
                </plugin>
                <!--mybatis-generator-maven-plugin-->
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <version>${mybatis-generator-maven-plugin.version}</version>
                    <configuration>
                        <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
                        <verbose>true</verbose>
                        <overwrite>true</overwrite>
                    </configuration>
                    <!--mybatis-generator的plugin有自己的classpath，我们在项目中直接继承的类和plugin不属于同一个classpath,
                    直接执行会报错，加入以下依赖解决该问题，使用前先mvn install将jar安装到本地仓库-->
                    <dependencies>
                        <dependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>spring-prometheus-dao</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>